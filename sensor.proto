syntax = "proto3";

package grpc;

// service AlarmSensor {
//   rpc SendData (MessageRequest) returns (Empty) {}
// }

// service WarningSensor {
//   rpc SendData (MessageRequest) returns (Empty) {}
// }

// message Empty {}

// message MessageRequest {
//   int32 id = 1;
//   string message = 2;
// }

service Server {
  rpc Signup (SignupRequest) returns (SignupReply);
  rpc Signout (SignoutRequest) returns (SignoutReply);
  rpc GetTrainStatus (TrainStatusRequest) returns (TrainStatusResponse) {}
  rpc UpdateTrainStatus (TrainUpdateRequest) returns (TrainUpdateResponse) {}
  rpc GetOtherTrainStatus (OtherTrainStatusRequest) returns (TrainStatusResponse) {}

  // sensors
  rpc SendSensorMessage (SensorMessageRequest) returns (SensorResponse) {}
  rpc TrainSensorStream (TrainConnectRequest) returns (stream TrainConnectReply) {}
  rpc ResetSensor (ResetSensorRequest) returns (ResetSensorResponse) {}
  rpc SensorConnect (SensorConnectRequest) returns (SensorConnectResponse) {}
  // rpc RestartTrain (RestartTrainRequest) returns (RestartTrainResponse) {}

  // replication edit
  rpc IsMasterQuery (IsMasterRequest) returns (IsMasterReply);
  rpc AddConnect (AddConnectRequest) returns (AddConnectReply);
  rpc Disconnect (DisconnectRequest) returns (DisconnectReply);
}

message DisconnectRequest{
  int32 requester_port = 1;
  int32 replier_port = 2;
  bool is_master = 3;
}

message DisconnectReply{
  bool success = 1;
  string error = 2;
}
message AddConnectRequest{
  int32 requester_port = 1;
  int32 replier_port = 2;
}

message AddConnectReply{
  bool success = 1;
  string error = 2;
}

message IsMasterRequest{}

message IsMasterReply{
  bool master = 1;
}

message SensorConnectRequest {
  int32 sensor_id = 1;
  bool alarm = 2;
}

message SensorConnectResponse {
  bool success = 1;
  string error = 2;
} 

message ResetSensorRequest {}

message ResetSensorResponse {
  bool success = 1;
  string error = 2;
} 

// message RestartTrainRequest {
//   int32 train_id = 1;
// }

// message RestartTrainResponse {
//   bool success = 1;
//   string error = 2;
// } 

message SignoutRequest {
  int32 train_id = 1;
}

message SignoutReply {
  bool success = 1;
  string error = 2;
}

message SignupRequest {
  int32 train_id = 1;
}

message SignupReply {
  bool success = 1;
  string error = 2;
}

message TrainConnectRequest {
  int32 train_id = 1;
}

message TrainConnectReply {
  int32 train_id = 1;
  bool alarm = 2; // true = alarm, false = warning
  int32 new_speed = 3; // can either tell train to stop or restart
  string message = 4;
}

message SensorMessageRequest {
  int32 id = 1;
  bool alarm = 2; // true = alarm, false = warning
  string message = 3;
}

message SensorResponse {
  int32 id = 1;
  bool success = 2;
  string error_message = 3;
}

message OtherTrainStatusRequest {
  int32 requesting_train_id = 1;
  int32 other_train_id = 2;
}

message TrainStatusRequest {
  int32 train_id = 1;
}

message TrainStatusResponse {
  int32 train_id = 1;
  double location = 2;
  double speed = 3;
}

message TrainUpdateRequest {
  int32 train_id = 1;
  double location = 2;
  double speed = 3;
}

message TrainUpdateResponse {
  bool success = 1;
}